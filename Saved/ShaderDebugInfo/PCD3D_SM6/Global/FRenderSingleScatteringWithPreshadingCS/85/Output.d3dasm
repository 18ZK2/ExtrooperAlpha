;
; Note: shader requires additional functionality:
;       Typed UAV Load Additional Formats
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: a83f410778eb442a24692c42409b96de
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(64,1,1)
;
;
; Buffer Definitions:
;
; cbuffer _RootShaderParameters
; {
;
;   struct hostlayout._RootShaderParameters
;   {
;
;       int bApplyEmissionAndTransmittance;           ; Offset:   96
;       int bApplyDirectLighting;                     ; Offset:  100
;       int LightType;                                ; Offset:  104
;       float VolumetricScatteringIntensity;          ; Offset:  128
;       row_major float4x4 TranslatedWorldToShadowMatrix;; Offset:  160
;       float4 ShadowmapMinMax;                       ; Offset:  224
;       float4 DepthBiasParameters;                   ; Offset:  240
;       float4 ShadowInjectParams;                    ; Offset:  256
;       row_major float4x4 ShadowViewProjectionMatrices[6];; Offset:  352
;       float InvShadowmapResolution;                 ; Offset:  736
;       uint bStaticallyShadowed;                     ; Offset:  752
;       row_major float4x4 TranslatedWorldToStaticShadowMatrix;; Offset:  784
;       float4 StaticShadowBufferSize;                ; Offset:  848
;       uint VirtualShadowMapId;                      ; Offset:  880
;       int MipLevel;                                 ; Offset:  912
;       uint3 LightingCacheResolution;                ; Offset:  944
;       float LightingCacheVoxelBias;                 ; Offset:  956
;       float MaxTraceDistance;                       ; Offset:  976
;       float StepSize;                               ; Offset:  980
;       int MaxStepCount;                             ; Offset:  984
;       int bJitter;                                  ; Offset:  988
;   
;   } _RootShaderParameters;                          ; Offset:    0 Size:   992
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:   64
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  128
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  192
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  256
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  320
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  384
;       row_major float4x4 View_ViewToClip;           ; Offset:  448
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  512
;       row_major float4x4 View_ClipToView;           ; Offset:  576
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  640
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  768
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  832
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  896
;       float3 View_ViewTilePosition;                 ; Offset:  960
;       float PrePadding_View_972;                    ; Offset:  972
;       float3 View_MatrixTilePosition;               ; Offset:  976
;       float PrePadding_View_988;                    ; Offset:  988
;       float3 View_ViewForward;                      ; Offset:  992
;       float PrePadding_View_1004;                   ; Offset: 1004
;       float3 View_ViewUp;                           ; Offset: 1008
;       float PrePadding_View_1020;                   ; Offset: 1020
;       float3 View_ViewRight;                        ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_HMDViewNoRollRight;               ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1072
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1088
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1136
;       float PrePadding_View_1148;                   ; Offset: 1148
;       float3 View_RelativePreViewTranslation;       ; Offset: 1152
;       float PrePadding_View_1164;                   ; Offset: 1164
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1168
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1232
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1360
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1424
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1488
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1552
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1616
;       float PrePadding_View_1628;                   ; Offset: 1628
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1632
;       float PrePadding_View_1644;                   ; Offset: 1644
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1648
;       float PrePadding_View_1660;                   ; Offset: 1660
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1664
;       float PrePadding_View_1676;                   ; Offset: 1676
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1680
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1744
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1808
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1872
;       float4 View_TemporalAAJitter;                 ; Offset: 1936
;       float4 View_GlobalClippingPlane;              ; Offset: 1952
;       float2 View_FieldOfViewWideAngles;            ; Offset: 1968
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 1976
;       float4 View_ViewRectMin;                      ; Offset: 1984
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2000
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2016
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2032
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2048
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2064
;       float4 View_ScreenToViewSpace;                ; Offset: 2080
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2096
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2104
;       int View_NumSceneColorMSAASamples;            ; Offset: 2112
;       float View_ProjectionDepthThicknessScale;     ; Offset: 2116
;       float View_PreExposure;                       ; Offset: 2120
;       float View_OneOverPreExposure;                ; Offset: 2124
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2128
;       float4 View_SpecularOverrideParameter;        ; Offset: 2144
;       float4 View_NormalOverrideParameter;          ; Offset: 2160
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2176
;       float View_PrevFrameGameTime;                 ; Offset: 2184
;       float View_PrevFrameRealTime;                 ; Offset: 2188
;       float View_OutOfBoundsMask;                   ; Offset: 2192
;       float PrePadding_View_2196;                   ; Offset: 2196
;       float PrePadding_View_2200;                   ; Offset: 2200
;       float PrePadding_View_2204;                   ; Offset: 2204
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2208
;       float View_CullingSign;                       ; Offset: 2220
;       float View_NearPlane;                         ; Offset: 2224
;       float View_GameTime;                          ; Offset: 2228
;       float View_RealTime;                          ; Offset: 2232
;       float View_DeltaTime;                         ; Offset: 2236
;       float View_MaterialTextureMipBias;            ; Offset: 2240
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2244
;       uint View_Random;                             ; Offset: 2248
;       uint View_FrameNumber;                        ; Offset: 2252
;       uint View_FrameCounter;                       ; Offset: 2256
;       uint View_StateFrameIndexMod8;                ; Offset: 2260
;       uint View_StateFrameIndex;                    ; Offset: 2264
;       uint View_DebugViewModeMask;                  ; Offset: 2268
;       uint View_WorldIsPaused;                      ; Offset: 2272
;       float View_CameraCut;                         ; Offset: 2276
;       float View_UnlitViewmodeMask;                 ; Offset: 2280
;       float PrePadding_View_2284;                   ; Offset: 2284
;       float4 View_DirectionalLightColor;            ; Offset: 2288
;       float3 View_DirectionalLightDirection;        ; Offset: 2304
;       float PrePadding_View_2316;                   ; Offset: 2316
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2320
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2352
;       float4 View_TemporalAAParams;                 ; Offset: 2384
;       float4 View_CircleDOFParams;                  ; Offset: 2400
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2416
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2420
;       float View_DepthOfFieldScale;                 ; Offset: 2424
;       float View_DepthOfFieldFocalLength;           ; Offset: 2428
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2432
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2436
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2440
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2444
;       float View_GeneralPurposeTweak;               ; Offset: 2448
;       float View_GeneralPurposeTweak2;              ; Offset: 2452
;       float View_DemosaicVposOffset;                ; Offset: 2456
;       float View_DecalDepthBias;                    ; Offset: 2460
;       float3 View_IndirectLightingColorScale;       ; Offset: 2464
;       float PrePadding_View_2476;                   ; Offset: 2476
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2480
;       float PrePadding_View_2492;                   ; Offset: 2492
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2496
;       float PrePadding_View_2508;                   ; Offset: 2508
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2512
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2544
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2576
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2608
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2640
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2672
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2688
;       float PrePadding_View_2700;                   ; Offset: 2700
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2704
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2720
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2784
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2800
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2804
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2808
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2812
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2816
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2832
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2836
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2840
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2844
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2848
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2852
;       float PrePadding_View_2856;                   ; Offset: 2856
;       float PrePadding_View_2860;                   ; Offset: 2860
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2864
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2876
;       float View_RealTimeReflectionCapture;         ; Offset: 2880
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2884
;       float PrePadding_View_2888;                   ; Offset: 2888
;       float PrePadding_View_2892;                   ; Offset: 2892
;       float4 View_AmbientCubemapTint;               ; Offset: 2896
;       float View_AmbientCubemapIntensity;           ; Offset: 2912
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2916
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2920
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2924
;       float4 View_SkyLightColor;                    ; Offset: 2928
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 2944
;       float View_MobilePreviewMode;                 ; Offset: 3072
;       float View_HMDEyePaddingOffset;               ; Offset: 3076
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3080
;       float View_ShowDecalsMask;                    ; Offset: 3084
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3088
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3092
;       float PrePadding_View_3096;                   ; Offset: 3096
;       float PrePadding_View_3100;                   ; Offset: 3100
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3104
;       int View_StereoPassIndex;                     ; Offset: 3116
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3120
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3216
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3312
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3408
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3504
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3508
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3512
;       int PrePadding_View_3516;                     ; Offset: 3516
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3520
;       float PrePadding_View_3532;                   ; Offset: 3532
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3536
;       float View_GlobalVolumeDimension;             ; Offset: 3548
;       float View_GlobalVolumeTexelSize;             ; Offset: 3552
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3556
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3560
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3564
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3568
;       float View_NotCoveredMinStepScale;            ; Offset: 3572
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3576
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3580
;       int2 View_CursorPosition;                     ; Offset: 3584
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3592
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3600
;       float PrePadding_View_3612;                   ; Offset: 3612
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3616
;       float PrePadding_View_3628;                   ; Offset: 3628
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3632
;       float2 View_VolumetricFogViewGridUVToPrevViewRectUV;; Offset: 3640
;       float2 View_VolumetricFogPrevViewGridRectUVToResourceUV;; Offset: 3648
;       float2 View_VolumetricFogPrevUVMax;           ; Offset: 3656
;       float2 View_VolumetricFogScreenToResourceUV;  ; Offset: 3664
;       float2 View_VolumetricFogUVMax;               ; Offset: 3672
;       float View_VolumetricFogMaxDistance;          ; Offset: 3680
;       float PrePadding_View_3684;                   ; Offset: 3684
;       float PrePadding_View_3688;                   ; Offset: 3688
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3696
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3728
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3740
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3744
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3756
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3760
;       float PrePadding_View_3764;                   ; Offset: 3764
;       float PrePadding_View_3768;                   ; Offset: 3768
;       float PrePadding_View_3772;                   ; Offset: 3772
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3776
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3808
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3812
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3816
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3820
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3824
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3828
;       uint PrePadding_View_3832;                    ; Offset: 3832
;       uint PrePadding_View_3836;                    ; Offset: 3836
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3840
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3856
;       float PrePadding_View_3864;                   ; Offset: 3864
;       float PrePadding_View_3868;                   ; Offset: 3868
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3872
;       float View_OverrideLandscapeLOD;              ; Offset: 3888
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3892
;       float View_MinRoughness;                      ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_HairRenderInfo;                   ; Offset: 3904
;       uint View_EnableSkyLight;                     ; Offset: 3920
;       uint View_HairRenderInfoBits;                 ; Offset: 3924
;       uint View_HairComponents;                     ; Offset: 3928
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3932
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3936
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3952
;       float4 View_SpecularProfileTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_GPUSceneViewId;                     ; Offset: 4528
;       float View_ViewResolutionFraction;            ; Offset: 4532
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4536
;       float PrePadding_View_4540;                   ; Offset: 4540
;       float4 View_TanAndInvTanHalfFOV;              ; Offset: 4544
;       float4 View_PrevTanAndInvTanHalfFOV;          ; Offset: 4560
;       float4 View_GlintLUTParameters0;              ; Offset: 4576
;       float4 View_GlintLUTParameters1;              ; Offset: 4592
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessSampler_View_GlobalDistanceFieldPageAtlasTextureSampler;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_GlobalDistanceFieldCoverageAtlasTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessSampler_View_GlobalDistanceFieldMipTextureSampler;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessResource_View_GGXLTCMatTexture;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_GGXLTCMatSampler;   ; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_GGXLTCAmpTexture;  ; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_GGXLTCAmpSampler;   ; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_SheenLTCTexture;   ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessSampler_View_SheenLTCSampler;    ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint View_bShadingEnergyConservation;         ; Offset: 5160
;       uint View_bShadingEnergyPreservation;         ; Offset: 5164
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessResource_View_GlintTexture;      ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessSampler_View_GlintSampler;       ; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_SimpleVolumeTexture;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessSampler_View_SimpleVolumeTextureSampler;; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_SimpleVolumeEnvTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_SimpleVolumeEnvTextureSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5264
;       uint PrePadding_View_5268;                    ; Offset: 5268
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5272
;       uint PrePadding_View_5276;                    ; Offset: 5276
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessResource_View_SpecularProfileTexture;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessSampler_View_SpecularProfileSampler;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_WaterData;         ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5328
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5344
;       float PrePadding_View_5348;                   ; Offset: 5348
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5360
;       uint PrePadding_View_5364;                    ; Offset: 5364
;       uint PrePadding_View_5368;                    ; Offset: 5368
;       uint PrePadding_View_5372;                    ; Offset: 5372
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5376
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5392
;       uint PrePadding_View_5396;                    ; Offset: 5396
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5400
;       uint PrePadding_View_5404;                    ; Offset: 5404
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5408
;       uint PrePadding_View_5412;                    ; Offset: 5412
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5416
;       uint PrePadding_View_5420;                    ; Offset: 5420
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5424
;       uint PrePadding_View_5428;                    ; Offset: 5428
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5432
;       uint PrePadding_View_5436;                    ; Offset: 5436
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5440
;       uint PrePadding_View_5444;                    ; Offset: 5444
;       uint PrePadding_View_5448;                    ; Offset: 5448
;       uint PrePadding_View_5452;                    ; Offset: 5452
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5456
;       float PrePadding_View_5468;                   ; Offset: 5468
;       float3 View_TLASViewTilePosition;             ; Offset: 5472
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5484
;
; }
;
; cbuffer UniformBufferConstants_SparseVoxelUniformBuffer
; {
;
;   struct hostlayout.UniformBufferConstants_SparseVoxelUniformBuffer
;   {
;
;       row_major float4x4 SparseVoxelUniformBuffer_LocalToWorld;; Offset:    0
;       row_major float4x4 SparseVoxelUniformBuffer_WorldToLocal;; Offset:   64
;       float3 SparseVoxelUniformBuffer_LocalBoundsOrigin;; Offset:  128
;       float PrePadding_SparseVoxelUniformBuffer_140;; Offset:  140
;       float3 SparseVoxelUniformBuffer_LocalBoundsExtent;; Offset:  144
;       float PrePadding_SparseVoxelUniformBuffer_156;; Offset:  156
;       int3 SparseVoxelUniformBuffer_VolumeResolution;; Offset:  160
;       int PrePadding_SparseVoxelUniformBuffer_172;  ; Offset:  172
;       uint BindlessResource_SparseVoxelUniformBuffer_ExtinctionTexture;; Offset:  176
;       uint PrePadding_SparseVoxelUniformBuffer_180; ; Offset:  180
;       uint BindlessResource_SparseVoxelUniformBuffer_EmissionTexture;; Offset:  184
;       uint PrePadding_SparseVoxelUniformBuffer_188; ; Offset:  188
;       uint BindlessResource_SparseVoxelUniformBuffer_AlbedoTexture;; Offset:  192
;       uint PrePadding_SparseVoxelUniformBuffer_196; ; Offset:  196
;       uint BindlessSampler_SparseVoxelUniformBuffer_TextureSampler;; Offset:  200
;       uint PrePadding_SparseVoxelUniformBuffer_204; ; Offset:  204
;       int3 SparseVoxelUniformBuffer_LightingCacheResolution;; Offset:  208
;       int PrePadding_SparseVoxelUniformBuffer_220;  ; Offset:  220
;       uint BindlessResource_SparseVoxelUniformBuffer_NumVoxelsBuffer;; Offset:  224
;       uint PrePadding_SparseVoxelUniformBuffer_228; ; Offset:  228
;       uint BindlessResource_SparseVoxelUniformBuffer_VoxelBuffer;; Offset:  232
;       uint PrePadding_SparseVoxelUniformBuffer_236; ; Offset:  236
;       int SparseVoxelUniformBuffer_MipLevel;        ; Offset:  240
;       float SparseVoxelUniformBuffer_MaxTraceDistance;; Offset:  244
;       float SparseVoxelUniformBuffer_MaxShadowTraceDistance;; Offset:  248
;       float SparseVoxelUniformBuffer_StepSize;      ; Offset:  252
;       float SparseVoxelUniformBuffer_StepFactor;    ; Offset:  256
;       float SparseVoxelUniformBuffer_ShadowStepSize;; Offset:  260
;       float SparseVoxelUniformBuffer_ShadowStepFactor;; Offset:  264
;   
;   } UniformBufferConstants_SparseVoxelUniformBuffer;; Offset:    0 Size:   268
;
; }
;
; Resource bind info for SparseVoxelUniformBuffer_VoxelBuffer
; {
;
;   struct struct.FVoxelDataPacked
;   {
;
;       uint LinearIndex;                             ; Offset:    0
;       uint MipLevel;                                ; Offset:    4
;   
;   } $Element;                                       ; Offset:    0 Size:     8
;
; }
;
; Resource bind info for RayMarchingTilesBuffer
; {
;
;   struct struct.FRayMarchingTile
;   {
;
;       uint2 PixelOffset;                            ; Offset:    0
;       uint Voxels[2];                               ; Offset:    8
;       uint Id;                                      ; Offset:   16
;       uint Padding[3];                              ; Offset:   20
;   
;   } $Element;                                       ; Offset:    0 Size:    32
;
; }
;
; Resource bind info for RWVoxelOutputBuffer
; {
;
;   struct struct.FVoxelDataPacked
;   {
;
;       uint LinearIndex;                             ; Offset:    0
;       uint MipLevel;                                ; Offset:    4
;   
;   } $Element;                                       ; Offset:    0 Size:     8
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; _RootShaderParameters             cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_SparseVoxelUniformBuffer   cbuffer      NA          NA     CB2            cb2     1
; View_SharedTrilinearClampedSampler   sampler      NA          NA      S0             s0     1
; SparseVoxelUniformBuffer_TextureSampler   sampler      NA          NA      S1             s1     1
; SparseVoxelUniformBuffer_ExtinctionTexture   texture     f32          3d      T0             t0     1
; SparseVoxelUniformBuffer_EmissionTexture   texture     f32          3d      T1             t1     1
; SparseVoxelUniformBuffer_AlbedoTexture   texture     f32          3d      T2             t2     1
; SparseVoxelUniformBuffer_NumVoxelsBuffer   texture     u32         buf      T3             t3     1
; SparseVoxelUniformBuffer_VoxelBuffer   texture  struct         r/o      T4             t4     1
; SceneDepthTexture                 texture     f32          2d      T5             t5     1
; LightingCacheTexture              texture     f32          3d      T6             t6     1
; RayMarchingTilesBuffer            texture  struct         r/o      T7             t7     1
; RWLightingTexture                     UAV     f32          2d      U0             u0     1
; RWVoxelOutputBuffer                   UAV  struct         r/w      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.StructuredBuffer<FVoxelDataPacked>" = type { %struct.FVoxelDataPacked }
%struct.FVoxelDataPacked = type { i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<FRayMarchingTile>" = type { %struct.FRayMarchingTile }
%struct.FRayMarchingTile = type { <2 x i32>, [2 x i32], i32, [3 x i32] }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%"class.RWStructuredBuffer<FVoxelDataPacked>" = type { %struct.FVoxelDataPacked }
%hostlayout._RootShaderParameters = type { i32, i32, i32, float, [4 x <4 x float>], <4 x float>, <4 x float>, <4 x float>, [6 x [4 x <4 x float>]], float, i32, [4 x <4 x float>], <4 x float>, i32, i32, <3 x i32>, float, float, float, i32, i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%hostlayout.UniformBufferConstants_SparseVoxelUniformBuffer = type { [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x i32>, i32, i32, i32, i32, i32, i32, float, float, float, float, float, float }
%struct.SamplerState = type { i32 }

define void @RenderSingleScatteringWithPreshadingCS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 1 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 13, i32 268 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 5484 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 13, i32 992 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %19 = call i32 @dx.op.groupId.i32(i32 94, i32 0)  ; GroupId(component)
  %20 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %21 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 524, i32 32 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=32>
  %22 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %21, i32 %19, i32 0, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %23 = extractvalue %dx.types.ResRet.i32 %22, 0
  %24 = extractvalue %dx.types.ResRet.i32 %22, 1
  %25 = and i32 %20, 7
  %26 = lshr i32 %20, 3
  %27 = add i32 %23, %25
  %28 = add i32 %24, %26
  %29 = uitofp i32 %27 to float
  %30 = uitofp i32 %28 to float
  %31 = fptoui float %29 to i32
  %32 = fptoui float %30 to i32
  %33 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 4098, i32 1033 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<4xF32>
  %34 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %33, i32 undef, i32 %31, i32 %32, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %35 = extractvalue %dx.types.ResRet.f32 %34, 3
  %36 = fsub fast float 1.000000e+00, %35
  %37 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 125)  ; CBufferLoadLegacy(handle,regIndex)
  %38 = extractvalue %dx.types.CBufRet.f32 %37, 0
  %39 = extractvalue %dx.types.CBufRet.f32 %37, 1
  %40 = fcmp fast oge float %29, %38
  %41 = fcmp fast oge float %30, %39
  %42 = or i1 %40, %41
  br i1 %42, label %877, label %43

; <label>:43                                      ; preds = %0
  %44 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 124)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.f32 %44, 0
  %46 = extractvalue %dx.types.CBufRet.f32 %44, 1
  %47 = fadd fast float %45, %29
  %48 = fadd fast float %46, %30
  %49 = fptosi float %47 to i32
  %50 = fptosi float %48 to i32
  %51 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %52 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %51, i32 0, i32 %49, i32 %50, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %53 = extractvalue %dx.types.ResRet.f32 %52, 0
  %54 = call float @dx.op.binary.f32(i32 35, float 0x3D71979980000000, float %53)  ; FMax(a,b)
  %55 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.f32 %55, 0
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 67)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = fmul fast float %58, %54
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %61 = fadd fast float %59, %60
  %62 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %63 = fmul fast float %62, %54
  %64 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %65 = fsub fast float %63, %64
  %66 = fdiv fast float 1.000000e+00, %65
  %67 = fadd fast float %61, %66
  %68 = call float @dx.op.binary.f32(i32 36, float %67, float %56)  ; FMin(a,b)
  %69 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 31)  ; CBufferLoadLegacy(handle,regIndex)
  %70 = extractvalue %dx.types.CBufRet.f32 %69, 3
  %71 = bitcast float %70 to i32
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %79, label %73, !dx.controlflow.hints !32

; <label>:73                                      ; preds = %43
  %74 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 30)  ; CBufferLoadLegacy(handle,regIndex)
  %75 = extractvalue %dx.types.CBufRet.f32 %74, 2
  %76 = fmul fast float %75, %68
  %77 = extractvalue %dx.types.CBufRet.f32 %69, 2
  %78 = fadd fast float %76, %77
  br label %83

; <label>:79                                      ; preds = %43
  %80 = fadd fast float %64, %68
  %81 = fmul fast float %80, %62
  %82 = fdiv fast float 1.000000e+00, %81
  br label %83

; <label>:83                                      ; preds = %79, %73
  %84 = phi float [ %78, %73 ], [ %82, %79 ]
  %85 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %86 = extractvalue %dx.types.CBufRet.i32 %85, 3
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %100, label %88

; <label>:88                                      ; preds = %83
  %89 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 141)  ; CBufferLoadLegacy(handle,regIndex)
  %90 = extractvalue %dx.types.CBufRet.i32 %89, 1
  %91 = uitofp i32 %90 to float
  %92 = fmul fast float %91, 0x4040551EC0000000
  %93 = fmul fast float %91, 0x4027A147A0000000
  %94 = fadd fast float %92, %47
  %95 = fadd fast float %93, %48
  %96 = call float @dx.op.dot2.f32(i32 54, float %94, float %95, float 0x3FB12E2860000000, float 0x3F77E8B200000000)  ; Dot2(ax,ay,bx,by)
  %97 = call float @dx.op.unary.f32(i32 22, float %96)  ; Frc(value)
  %98 = fmul fast float %97, 0x404A7DD040000000
  %99 = call float @dx.op.unary.f32(i32 22, float %98)  ; Frc(value)
  br label %100

; <label>:100                                     ; preds = %88, %83
  %101 = phi float [ %99, %88 ], [ 0.000000e+00, %83 ]
  %102 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 60)  ; CBufferLoadLegacy(handle,regIndex)
  %103 = extractvalue %dx.types.CBufRet.f32 %102, 0
  %104 = extractvalue %dx.types.CBufRet.f32 %102, 1
  %105 = extractvalue %dx.types.CBufRet.f32 %102, 2
  %106 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 72)  ; CBufferLoadLegacy(handle,regIndex)
  %107 = extractvalue %dx.types.CBufRet.f32 %106, 0
  %108 = extractvalue %dx.types.CBufRet.f32 %106, 1
  %109 = extractvalue %dx.types.CBufRet.f32 %106, 2
  %110 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 70)  ; CBufferLoadLegacy(handle,regIndex)
  %111 = extractvalue %dx.types.CBufRet.f32 %110, 0
  %112 = extractvalue %dx.types.CBufRet.f32 %110, 1
  %113 = extractvalue %dx.types.CBufRet.f32 %110, 2
  %114 = fsub fast float %111, %107
  %115 = fsub fast float %112, %108
  %116 = fsub fast float %113, %109
  %117 = fmul fast float %103, 2.097152e+06
  %118 = fmul fast float %104, 2.097152e+06
  %119 = fmul fast float %105, 2.097152e+06
  %120 = fadd fast float %114, %117
  %121 = fadd fast float %115, %118
  %122 = fadd fast float %116, %119
  %123 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 121)  ; CBufferLoadLegacy(handle,regIndex)
  %124 = extractvalue %dx.types.CBufRet.f32 %123, 0
  %125 = extractvalue %dx.types.CBufRet.f32 %123, 1
  %126 = fadd fast float %124, %47
  %127 = fadd fast float %125, %48
  %128 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 44)  ; CBufferLoadLegacy(handle,regIndex)
  %129 = extractvalue %dx.types.CBufRet.f32 %128, 0
  %130 = extractvalue %dx.types.CBufRet.f32 %128, 1
  %131 = extractvalue %dx.types.CBufRet.f32 %128, 2
  %132 = extractvalue %dx.types.CBufRet.f32 %128, 3
  %133 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 45)  ; CBufferLoadLegacy(handle,regIndex)
  %134 = extractvalue %dx.types.CBufRet.f32 %133, 0
  %135 = extractvalue %dx.types.CBufRet.f32 %133, 1
  %136 = extractvalue %dx.types.CBufRet.f32 %133, 2
  %137 = extractvalue %dx.types.CBufRet.f32 %133, 3
  %138 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 46)  ; CBufferLoadLegacy(handle,regIndex)
  %139 = extractvalue %dx.types.CBufRet.f32 %138, 0
  %140 = extractvalue %dx.types.CBufRet.f32 %138, 1
  %141 = extractvalue %dx.types.CBufRet.f32 %138, 2
  %142 = extractvalue %dx.types.CBufRet.f32 %138, 3
  %143 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 47)  ; CBufferLoadLegacy(handle,regIndex)
  %144 = extractvalue %dx.types.CBufRet.f32 %143, 0
  %145 = extractvalue %dx.types.CBufRet.f32 %143, 1
  %146 = extractvalue %dx.types.CBufRet.f32 %143, 2
  %147 = extractvalue %dx.types.CBufRet.f32 %143, 3
  %148 = fmul fast float %126, %129
  %149 = call float @dx.op.tertiary.f32(i32 46, float %127, float %134, float %148)  ; FMad(a,b,c)
  %150 = call float @dx.op.tertiary.f32(i32 46, float %84, float %139, float %149)  ; FMad(a,b,c)
  %151 = fadd fast float %150, %144
  %152 = fmul fast float %126, %130
  %153 = call float @dx.op.tertiary.f32(i32 46, float %127, float %135, float %152)  ; FMad(a,b,c)
  %154 = call float @dx.op.tertiary.f32(i32 46, float %84, float %140, float %153)  ; FMad(a,b,c)
  %155 = fadd fast float %154, %145
  %156 = fmul fast float %126, %131
  %157 = call float @dx.op.tertiary.f32(i32 46, float %127, float %136, float %156)  ; FMad(a,b,c)
  %158 = call float @dx.op.tertiary.f32(i32 46, float %84, float %141, float %157)  ; FMad(a,b,c)
  %159 = fadd fast float %158, %146
  %160 = fmul fast float %126, %132
  %161 = call float @dx.op.tertiary.f32(i32 46, float %127, float %137, float %160)  ; FMad(a,b,c)
  %162 = call float @dx.op.tertiary.f32(i32 46, float %84, float %142, float %161)  ; FMad(a,b,c)
  %163 = fadd fast float %162, %147
  %164 = fdiv fast float %151, %163
  %165 = fdiv fast float %155, %163
  %166 = fdiv fast float %159, %163
  %167 = fsub fast float %164, %107
  %168 = fsub fast float %165, %108
  %169 = fsub fast float %166, %109
  %170 = fadd fast float %167, %117
  %171 = fadd fast float %168, %118
  %172 = fadd fast float %169, %119
  %173 = fsub fast float %164, %111
  %174 = fsub fast float %165, %112
  %175 = fsub fast float %166, %113
  %176 = fmul fast float %173, %173
  %177 = fmul fast float %174, %174
  %178 = fadd fast float %176, %177
  %179 = fmul fast float %175, %175
  %180 = fadd fast float %178, %179
  %181 = call float @dx.op.unary.f32(i32 24, float %180)  ; Sqrt(value)
  %182 = fdiv fast float %173, %181
  %183 = fdiv fast float %174, %181
  %184 = fdiv fast float %175, %181
  %185 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %186 = extractvalue %dx.types.CBufRet.f32 %185, 0
  %187 = extractvalue %dx.types.CBufRet.f32 %185, 1
  %188 = extractvalue %dx.types.CBufRet.f32 %185, 2
  %189 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %190 = extractvalue %dx.types.CBufRet.f32 %189, 0
  %191 = extractvalue %dx.types.CBufRet.f32 %189, 1
  %192 = extractvalue %dx.types.CBufRet.f32 %189, 2
  %193 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %194 = extractvalue %dx.types.CBufRet.f32 %193, 0
  %195 = extractvalue %dx.types.CBufRet.f32 %193, 1
  %196 = extractvalue %dx.types.CBufRet.f32 %193, 2
  %197 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %198 = extractvalue %dx.types.CBufRet.f32 %197, 0
  %199 = extractvalue %dx.types.CBufRet.f32 %197, 1
  %200 = extractvalue %dx.types.CBufRet.f32 %197, 2
  %201 = fmul fast float %186, %120
  %202 = call float @dx.op.tertiary.f32(i32 46, float %121, float %190, float %201)  ; FMad(a,b,c)
  %203 = call float @dx.op.tertiary.f32(i32 46, float %122, float %194, float %202)  ; FMad(a,b,c)
  %204 = fadd fast float %203, %198
  %205 = fmul fast float %187, %120
  %206 = call float @dx.op.tertiary.f32(i32 46, float %121, float %191, float %205)  ; FMad(a,b,c)
  %207 = call float @dx.op.tertiary.f32(i32 46, float %122, float %195, float %206)  ; FMad(a,b,c)
  %208 = fadd fast float %207, %199
  %209 = fmul fast float %188, %120
  %210 = call float @dx.op.tertiary.f32(i32 46, float %121, float %192, float %209)  ; FMad(a,b,c)
  %211 = call float @dx.op.tertiary.f32(i32 46, float %122, float %196, float %210)  ; FMad(a,b,c)
  %212 = fadd fast float %211, %200
  %213 = fmul fast float %186, %170
  %214 = call float @dx.op.tertiary.f32(i32 46, float %171, float %190, float %213)  ; FMad(a,b,c)
  %215 = call float @dx.op.tertiary.f32(i32 46, float %172, float %194, float %214)  ; FMad(a,b,c)
  %216 = fmul fast float %187, %170
  %217 = call float @dx.op.tertiary.f32(i32 46, float %171, float %191, float %216)  ; FMad(a,b,c)
  %218 = call float @dx.op.tertiary.f32(i32 46, float %172, float %195, float %217)  ; FMad(a,b,c)
  %219 = fmul fast float %188, %170
  %220 = call float @dx.op.tertiary.f32(i32 46, float %171, float %192, float %219)  ; FMad(a,b,c)
  %221 = call float @dx.op.tertiary.f32(i32 46, float %172, float %196, float %220)  ; FMad(a,b,c)
  %222 = fsub fast float %215, %203
  %223 = fsub fast float %218, %207
  %224 = fsub fast float %221, %211
  %225 = fmul fast float %222, %222
  %226 = fmul fast float %223, %223
  %227 = fadd fast float %226, %225
  %228 = fmul fast float %224, %224
  %229 = fadd fast float %227, %228
  %230 = call float @dx.op.unary.f32(i32 24, float %229)  ; Sqrt(value)
  %231 = fdiv fast float %222, %230
  %232 = fdiv fast float %223, %230
  %233 = fdiv fast float %224, %230
  %234 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %235 = extractvalue %dx.types.CBufRet.f32 %234, 0
  %236 = extractvalue %dx.types.CBufRet.f32 %234, 1
  %237 = extractvalue %dx.types.CBufRet.f32 %234, 2
  %238 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %239 = extractvalue %dx.types.CBufRet.f32 %238, 0
  %240 = extractvalue %dx.types.CBufRet.f32 %238, 1
  %241 = extractvalue %dx.types.CBufRet.f32 %238, 2
  %242 = fsub fast float %235, %239
  %243 = fsub fast float %236, %240
  %244 = fsub fast float %237, %241
  %245 = fadd fast float %239, %235
  %246 = fadd fast float %240, %236
  %247 = fadd fast float %241, %237
  %248 = fdiv fast float 1.000000e+00, %231
  %249 = fdiv fast float 1.000000e+00, %232
  %250 = fdiv fast float 1.000000e+00, %233
  %251 = fsub fast float %242, %204
  %252 = fsub fast float %243, %208
  %253 = fsub fast float %244, %212
  %254 = fmul fast float %251, %248
  %255 = fmul fast float %249, %252
  %256 = fmul fast float %250, %253
  %257 = fsub fast float %245, %204
  %258 = fsub fast float %246, %208
  %259 = fsub fast float %247, %212
  %260 = fmul fast float %257, %248
  %261 = fmul fast float %258, %249
  %262 = fmul fast float %259, %250
  %263 = call float @dx.op.binary.f32(i32 36, float %254, float %260)  ; FMin(a,b)
  %264 = call float @dx.op.binary.f32(i32 36, float %255, float %261)  ; FMin(a,b)
  %265 = call float @dx.op.binary.f32(i32 36, float %256, float %262)  ; FMin(a,b)
  %266 = call float @dx.op.binary.f32(i32 35, float %254, float %260)  ; FMax(a,b)
  %267 = call float @dx.op.binary.f32(i32 35, float %255, float %261)  ; FMax(a,b)
  %268 = call float @dx.op.binary.f32(i32 35, float %256, float %262)  ; FMax(a,b)
  %269 = call float @dx.op.binary.f32(i32 35, float %264, float %265)  ; FMax(a,b)
  %270 = call float @dx.op.binary.f32(i32 35, float %263, float %269)  ; FMax(a,b)
  %271 = call float @dx.op.binary.f32(i32 36, float %267, float %268)  ; FMin(a,b)
  %272 = call float @dx.op.binary.f32(i32 36, float %266, float %271)  ; FMin(a,b)
  %273 = call float @dx.op.binary.f32(i32 35, float %270, float 0.000000e+00)  ; FMax(a,b)
  %274 = call float @dx.op.binary.f32(i32 36, float %272, float %230)  ; FMin(a,b)
  %275 = fsub fast float %274, %273
  %276 = fcmp fast ugt float %275, 0.000000e+00
  br i1 %276, label %277, label %877

; <label>:277                                     ; preds = %100
  %278 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %279 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %278, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %280 = extractvalue %dx.types.ResRet.i32 %279, 0
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %382, label %282

; <label>:282                                     ; preds = %277
  br label %283

; <label>:283                                     ; preds = %283, %282
  %284 = phi i32 [ %376, %283 ], [ 0, %282 ]
  %285 = phi float [ %375, %283 ], [ %274, %282 ]
  %286 = phi float [ %374, %283 ], [ %274, %282 ]
  %287 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 524, i32 8 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=8>
  %288 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %287, i32 %284, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %289 = extractvalue %dx.types.ResRet.i32 %288, 0
  %290 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %287, i32 %284, i32 4, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %291 = extractvalue %dx.types.ResRet.i32 %290, 0
  %292 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %293 = extractvalue %dx.types.CBufRet.i32 %292, 0
  %294 = extractvalue %dx.types.CBufRet.i32 %292, 1
  %295 = and i32 %291, 31
  %296 = lshr i32 %293, %295
  %297 = lshr i32 %294, %295
  %298 = mul i32 %296, %297
  %299 = urem i32 %289, %298
  %300 = urem i32 %299, %296
  %301 = udiv i32 %299, %296
  %302 = udiv i32 %289, %298
  %303 = extractvalue %dx.types.CBufRet.i32 %292, 2
  %304 = ashr i32 %293, %295
  %305 = sitofp i32 %304 to float
  %306 = ashr i32 %294, %295
  %307 = sitofp i32 %306 to float
  %308 = ashr i32 %303, %295
  %309 = sitofp i32 %308 to float
  %310 = uitofp i32 %300 to float
  %311 = uitofp i32 %301 to float
  %312 = uitofp i32 %302 to float
  %313 = fdiv fast float %310, %305
  %314 = fdiv fast float %311, %307
  %315 = fdiv fast float %312, %309
  %316 = add i32 %300, 1
  %317 = add i32 %301, 1
  %318 = add i32 %302, 1
  %319 = uitofp i32 %316 to float
  %320 = uitofp i32 %317 to float
  %321 = uitofp i32 %318 to float
  %322 = fdiv fast float %319, %305
  %323 = fdiv fast float %320, %307
  %324 = fdiv fast float %321, %309
  %325 = fadd fast float %239, %239
  %326 = fadd fast float %240, %240
  %327 = fadd fast float %241, %241
  %328 = fmul fast float %313, %325
  %329 = fmul fast float %314, %326
  %330 = fmul fast float %315, %327
  %331 = fmul fast float %322, %325
  %332 = fmul fast float %323, %326
  %333 = fmul fast float %324, %327
  %334 = fsub fast float 0xBF1A36E2E0000000, %204
  %335 = fadd fast float %334, %242
  %336 = fadd fast float %335, %328
  %337 = fsub fast float 0xBF1A36E2E0000000, %208
  %338 = fadd fast float %337, %243
  %339 = fadd fast float %338, %329
  %340 = fsub fast float 0xBF1A36E2E0000000, %212
  %341 = fadd fast float %340, %244
  %342 = fadd fast float %341, %330
  %343 = fmul fast float %248, %336
  %344 = fmul fast float %249, %339
  %345 = fmul fast float %250, %342
  %346 = fsub fast float 0x3F1A36E2E0000000, %204
  %347 = fadd fast float %346, %242
  %348 = fadd fast float %347, %331
  %349 = fsub fast float 0x3F1A36E2E0000000, %208
  %350 = fadd fast float %349, %243
  %351 = fadd fast float %350, %332
  %352 = fsub fast float 0x3F1A36E2E0000000, %212
  %353 = fadd fast float %352, %244
  %354 = fadd fast float %353, %333
  %355 = fmul fast float %348, %248
  %356 = fmul fast float %351, %249
  %357 = fmul fast float %354, %250
  %358 = call float @dx.op.binary.f32(i32 36, float %343, float %355)  ; FMin(a,b)
  %359 = call float @dx.op.binary.f32(i32 36, float %344, float %356)  ; FMin(a,b)
  %360 = call float @dx.op.binary.f32(i32 36, float %345, float %357)  ; FMin(a,b)
  %361 = call float @dx.op.binary.f32(i32 35, float %343, float %355)  ; FMax(a,b)
  %362 = call float @dx.op.binary.f32(i32 35, float %344, float %356)  ; FMax(a,b)
  %363 = call float @dx.op.binary.f32(i32 35, float %345, float %357)  ; FMax(a,b)
  %364 = call float @dx.op.binary.f32(i32 35, float %359, float %360)  ; FMax(a,b)
  %365 = call float @dx.op.binary.f32(i32 35, float %358, float %364)  ; FMax(a,b)
  %366 = call float @dx.op.binary.f32(i32 36, float %362, float %363)  ; FMin(a,b)
  %367 = call float @dx.op.binary.f32(i32 36, float %361, float %366)  ; FMin(a,b)
  %368 = call float @dx.op.binary.f32(i32 35, float %365, float 0.000000e+00)  ; FMax(a,b)
  %369 = call float @dx.op.binary.f32(i32 36, float %367, float %274)  ; FMin(a,b)
  %370 = fsub fast float %369, %368
  %371 = fcmp fast ogt float %370, 0.000000e+00
  %372 = fcmp fast olt float %368, %286
  %373 = and i1 %372, %371
  %374 = select i1 %373, float %368, float %286
  %375 = select i1 %373, float %369, float %285
  %376 = add i32 %284, 1
  %377 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %378 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %377, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %379 = extractvalue %dx.types.ResRet.i32 %378, 0
  %380 = icmp ult i32 %376, %379
  br i1 %380, label %283, label %381

; <label>:381                                     ; preds = %283
  br label %382

; <label>:382                                     ; preds = %381, %277
  %383 = phi float [ %274, %277 ], [ %375, %381 ]
  %384 = phi float [ %274, %277 ], [ %374, %381 ]
  %385 = fsub fast float %383, %384
  %386 = fcmp fast ogt float %385, 0.000000e+00
  br i1 %386, label %387, label %813

; <label>:387                                     ; preds = %382
  br label %388

; <label>:388                                     ; preds = %807, %387
  %389 = phi float [ %696, %807 ], [ 0.000000e+00, %387 ]
  %390 = phi float [ %697, %807 ], [ 0.000000e+00, %387 ]
  %391 = phi float [ %698, %807 ], [ 0.000000e+00, %387 ]
  %392 = phi float [ %699, %807 ], [ %36, %387 ]
  %393 = phi float [ %700, %807 ], [ %36, %387 ]
  %394 = phi float [ %701, %807 ], [ %36, %387 ]
  %395 = phi float [ %809, %807 ], [ %384, %387 ]
  %396 = phi float [ %808, %807 ], [ %383, %387 ]
  %397 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %398 = extractvalue %dx.types.CBufRet.i32 %397, 1
  %399 = extractvalue %dx.types.CBufRet.i32 %397, 0
  %400 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %401 = extractvalue %dx.types.CBufRet.i32 %400, 2
  %402 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %403 = extractvalue %dx.types.CBufRet.f32 %402, 3
  %404 = fcmp fast ugt float %403, 0.000000e+00
  br i1 %404, label %431, label %405

; <label>:405                                     ; preds = %388
  %406 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %407 = extractvalue %dx.types.CBufRet.f32 %406, 0
  %408 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %409 = extractvalue %dx.types.CBufRet.f32 %408, 0
  %410 = extractvalue %dx.types.CBufRet.f32 %408, 1
  %411 = extractvalue %dx.types.CBufRet.f32 %408, 2
  %412 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %413 = extractvalue %dx.types.CBufRet.i32 %412, 0
  %414 = extractvalue %dx.types.CBufRet.i32 %412, 1
  %415 = extractvalue %dx.types.CBufRet.i32 %412, 2
  %416 = uitofp i32 %413 to float
  %417 = uitofp i32 %414 to float
  %418 = uitofp i32 %415 to float
  %419 = fmul fast float %416, %231
  %420 = fdiv fast float %409, %419
  %421 = fmul fast float %417, %232
  %422 = fdiv fast float %410, %421
  %423 = fmul fast float %418, %233
  %424 = fdiv fast float %411, %423
  %425 = call float @dx.op.unary.f32(i32 6, float %420)  ; FAbs(value)
  %426 = call float @dx.op.unary.f32(i32 6, float %422)  ; FAbs(value)
  %427 = call float @dx.op.unary.f32(i32 6, float %424)  ; FAbs(value)
  %428 = call float @dx.op.binary.f32(i32 36, float %426, float %427)  ; FMin(a,b)
  %429 = call float @dx.op.binary.f32(i32 36, float %425, float %428)  ; FMin(a,b)
  %430 = fmul fast float %429, %407
  br label %431

; <label>:431                                     ; preds = %405, %388
  %432 = phi float [ %430, %405 ], [ %403, %388 ]
  %433 = call float @dx.op.binary.f32(i32 35, float %432, float 0x3F847AE140000000)  ; FMax(a,b)
  %434 = fmul fast float %396, %231
  %435 = fmul fast float %396, %232
  %436 = fmul fast float %396, %233
  %437 = fadd fast float %434, %204
  %438 = fadd fast float %435, %208
  %439 = fadd fast float %436, %212
  %440 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %441 = extractvalue %dx.types.CBufRet.f32 %440, 0
  %442 = extractvalue %dx.types.CBufRet.f32 %440, 1
  %443 = extractvalue %dx.types.CBufRet.f32 %440, 2
  %444 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %445 = extractvalue %dx.types.CBufRet.f32 %444, 0
  %446 = extractvalue %dx.types.CBufRet.f32 %444, 1
  %447 = extractvalue %dx.types.CBufRet.f32 %444, 2
  %448 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %449 = extractvalue %dx.types.CBufRet.f32 %448, 0
  %450 = extractvalue %dx.types.CBufRet.f32 %448, 1
  %451 = extractvalue %dx.types.CBufRet.f32 %448, 2
  %452 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %453 = extractvalue %dx.types.CBufRet.f32 %452, 0
  %454 = extractvalue %dx.types.CBufRet.f32 %452, 1
  %455 = extractvalue %dx.types.CBufRet.f32 %452, 2
  %456 = fmul fast float %441, %437
  %457 = call float @dx.op.tertiary.f32(i32 46, float %438, float %445, float %456)  ; FMad(a,b,c)
  %458 = call float @dx.op.tertiary.f32(i32 46, float %439, float %449, float %457)  ; FMad(a,b,c)
  %459 = fmul fast float %442, %437
  %460 = call float @dx.op.tertiary.f32(i32 46, float %438, float %446, float %459)  ; FMad(a,b,c)
  %461 = call float @dx.op.tertiary.f32(i32 46, float %439, float %450, float %460)  ; FMad(a,b,c)
  %462 = fmul fast float %443, %437
  %463 = call float @dx.op.tertiary.f32(i32 46, float %438, float %447, float %462)  ; FMad(a,b,c)
  %464 = call float @dx.op.tertiary.f32(i32 46, float %439, float %451, float %463)  ; FMad(a,b,c)
  %465 = fsub fast float %453, %120
  %466 = fadd fast float %465, %458
  %467 = fsub fast float %454, %121
  %468 = fadd fast float %467, %461
  %469 = fsub fast float %455, %122
  %470 = fadd fast float %469, %464
  %471 = fmul fast float %466, %466
  %472 = fmul fast float %468, %468
  %473 = fadd fast float %472, %471
  %474 = fmul fast float %470, %470
  %475 = fadd fast float %473, %474
  %476 = call float @dx.op.unary.f32(i32 24, float %475)  ; Sqrt(value)
  %477 = fdiv fast float %476, %396
  %478 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %479 = extractvalue %dx.types.CBufRet.f32 %478, 0
  %480 = extractvalue %dx.types.CBufRet.f32 %478, 1
  %481 = extractvalue %dx.types.CBufRet.f32 %478, 2
  %482 = fmul fast float %479, 2.000000e+00
  %483 = fmul fast float %480, 2.000000e+00
  %484 = fmul fast float %481, 2.000000e+00
  %485 = fmul fast float %482, %482
  %486 = fmul fast float %483, %483
  %487 = fadd fast float %485, %486
  %488 = fmul fast float %484, %484
  %489 = fadd fast float %487, %488
  %490 = call float @dx.op.unary.f32(i32 24, float %489)  ; Sqrt(value)
  %491 = fdiv fast float %490, %433
  %492 = call float @dx.op.binary.f32(i32 35, float %491, float 1.000000e+00)  ; FMax(a,b)
  %493 = fptoui float %492 to i32
  %494 = icmp ugt i32 %493, %401
  %495 = uitofp i32 %401 to float
  %496 = fdiv fast float %490, %495
  %497 = select i1 %494, float %496, float %433
  %498 = fsub fast float %396, %395
  %499 = call float @dx.op.unary.f32(i32 6, float %498)  ; FAbs(value)
  %500 = fdiv fast float %499, %497
  %501 = call float @dx.op.unary.f32(i32 28, float %500)  ; Round_pi(value)
  %502 = call float @dx.op.binary.f32(i32 35, float %501, float 1.000000e+00)  ; FMax(a,b)
  %503 = fptoui float %502 to i32
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %695, label %505

; <label>:505                                     ; preds = %431
  br label %506

; <label>:506                                     ; preds = %688, %505
  %507 = phi i32 [ %689, %688 ], [ 0, %505 ]
  %508 = phi float [ %670, %688 ], [ %389, %505 ]
  %509 = phi float [ %671, %688 ], [ %390, %505 ]
  %510 = phi float [ %672, %688 ], [ %391, %505 ]
  %511 = phi float [ %680, %688 ], [ %392, %505 ]
  %512 = phi float [ %681, %688 ], [ %393, %505 ]
  %513 = phi float [ %682, %688 ], [ %394, %505 ]
  %514 = uitofp i32 %507 to float
  %515 = fadd fast float %514, %101
  %516 = fmul fast float %515, %497
  %517 = fadd fast float %516, %395
  %518 = fmul fast float %517, %231
  %519 = fmul fast float %517, %232
  %520 = fmul fast float %517, %233
  %521 = fadd fast float %518, %204
  %522 = fadd fast float %519, %208
  %523 = fadd fast float %520, %212
  %524 = fmul fast float %477, %182
  %525 = fmul fast float %524, %517
  %526 = fmul fast float %477, %183
  %527 = fmul fast float %526, %517
  %528 = fmul fast float %477, %184
  %529 = fmul fast float %528, %517
  %530 = fadd fast float %525, %120
  %531 = fadd fast float %527, %121
  %532 = fadd fast float %529, %122
  %533 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %534 = extractvalue %dx.types.CBufRet.f32 %533, 0
  %535 = extractvalue %dx.types.CBufRet.f32 %533, 1
  %536 = extractvalue %dx.types.CBufRet.f32 %533, 2
  %537 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %538 = extractvalue %dx.types.CBufRet.f32 %537, 0
  %539 = extractvalue %dx.types.CBufRet.f32 %537, 1
  %540 = extractvalue %dx.types.CBufRet.f32 %537, 2
  %541 = fsub fast float %534, %538
  %542 = fsub fast float %535, %539
  %543 = fsub fast float %536, %540
  %544 = fsub fast float %521, %541
  %545 = fsub fast float %522, %542
  %546 = fsub fast float %523, %543
  %547 = fadd fast float %538, %538
  %548 = fadd fast float %539, %539
  %549 = fadd fast float %540, %540
  %550 = fdiv fast float %544, %547
  %551 = fdiv fast float %545, %548
  %552 = fdiv fast float %546, %549
  %553 = icmp eq i32 %399, 0
  br i1 %553, label %570, label %554

; <label>:554                                     ; preds = %506
  %555 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %556 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %557 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %555, %dx.types.Handle %556, float %550, float %551, float %552, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %558 = extractvalue %dx.types.ResRet.f32 %557, 0
  %559 = extractvalue %dx.types.ResRet.f32 %557, 1
  %560 = extractvalue %dx.types.ResRet.f32 %557, 2
  %561 = fmul fast float %511, %497
  %562 = fmul fast float %561, %558
  %563 = fmul fast float %512, %497
  %564 = fmul fast float %563, %559
  %565 = fmul fast float %513, %497
  %566 = fmul fast float %565, %560
  %567 = fadd fast float %562, %508
  %568 = fadd fast float %564, %509
  %569 = fadd fast float %566, %510
  br label %570

; <label>:570                                     ; preds = %554, %506
  %571 = phi float [ %567, %554 ], [ %508, %506 ]
  %572 = phi float [ %568, %554 ], [ %509, %506 ]
  %573 = phi float [ %569, %554 ], [ %510, %506 ]
  %574 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %575 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %576 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %574, %dx.types.Handle %575, float %550, float %551, float %552, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %577 = extractvalue %dx.types.ResRet.f32 %576, 0
  %578 = extractvalue %dx.types.ResRet.f32 %576, 1
  %579 = extractvalue %dx.types.ResRet.f32 %576, 2
  %580 = icmp eq i32 %398, 0
  br i1 %580, label %669, label %581

; <label>:581                                     ; preds = %570
  %582 = fcmp fast ogt float %577, 0.000000e+00
  %583 = fcmp fast ogt float %578, 0.000000e+00
  %584 = fcmp fast ogt float %579, 0.000000e+00
  %585 = or i1 %582, %583
  %586 = or i1 %584, %585
  br i1 %586, label %587, label %669

; <label>:587                                     ; preds = %581
  %588 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %589 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %588, %dx.types.Handle %575, float %550, float %551, float %552, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %590 = extractvalue %dx.types.ResRet.f32 %589, 0
  %591 = extractvalue %dx.types.ResRet.f32 %589, 1
  %592 = extractvalue %dx.types.ResRet.f32 %589, 2
  %593 = fcmp fast ogt float %590, 0.000000e+00
  %594 = fcmp fast ogt float %591, 0.000000e+00
  %595 = fcmp fast ogt float %592, 0.000000e+00
  %596 = or i1 %593, %594
  %597 = or i1 %595, %596
  br i1 %597, label %598, label %669

; <label>:598                                     ; preds = %587
  %599 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %600 = extractvalue %dx.types.CBufRet.f32 %599, 0
  %601 = extractvalue %dx.types.CBufRet.f32 %599, 1
  %602 = extractvalue %dx.types.CBufRet.f32 %599, 2
  %603 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %604 = extractvalue %dx.types.CBufRet.f32 %603, 0
  %605 = extractvalue %dx.types.CBufRet.f32 %603, 1
  %606 = extractvalue %dx.types.CBufRet.f32 %603, 2
  %607 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %608 = extractvalue %dx.types.CBufRet.f32 %607, 0
  %609 = extractvalue %dx.types.CBufRet.f32 %607, 1
  %610 = extractvalue %dx.types.CBufRet.f32 %607, 2
  %611 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %612 = extractvalue %dx.types.CBufRet.f32 %611, 0
  %613 = extractvalue %dx.types.CBufRet.f32 %611, 1
  %614 = extractvalue %dx.types.CBufRet.f32 %611, 2
  %615 = fmul fast float %600, %530
  %616 = call float @dx.op.tertiary.f32(i32 46, float %531, float %604, float %615)  ; FMad(a,b,c)
  %617 = call float @dx.op.tertiary.f32(i32 46, float %532, float %608, float %616)  ; FMad(a,b,c)
  %618 = fmul fast float %601, %530
  %619 = call float @dx.op.tertiary.f32(i32 46, float %531, float %605, float %618)  ; FMad(a,b,c)
  %620 = call float @dx.op.tertiary.f32(i32 46, float %532, float %609, float %619)  ; FMad(a,b,c)
  %621 = fmul fast float %602, %530
  %622 = call float @dx.op.tertiary.f32(i32 46, float %531, float %606, float %621)  ; FMad(a,b,c)
  %623 = call float @dx.op.tertiary.f32(i32 46, float %532, float %610, float %622)  ; FMad(a,b,c)
  %624 = fadd fast float %617, %612
  %625 = fsub fast float %624, %534
  %626 = fadd fast float %625, %538
  %627 = fadd fast float %620, %613
  %628 = fsub fast float %627, %535
  %629 = fadd fast float %628, %539
  %630 = fadd fast float %623, %614
  %631 = fsub fast float %630, %536
  %632 = fadd fast float %631, %540
  %633 = fmul fast float %538, 2.000000e+00
  %634 = fmul fast float %539, 2.000000e+00
  %635 = fmul fast float %540, 2.000000e+00
  %636 = fdiv fast float %626, %633
  %637 = fdiv fast float %629, %634
  %638 = fdiv fast float %632, %635
  %639 = call float @dx.op.unary.f32(i32 7, float %636)  ; Saturate(value)
  %640 = call float @dx.op.unary.f32(i32 7, float %637)  ; Saturate(value)
  %641 = call float @dx.op.unary.f32(i32 7, float %638)  ; Saturate(value)
  %642 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %643 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %644 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %642, %dx.types.Handle %643, float %639, float %640, float %641, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %645 = extractvalue %dx.types.ResRet.f32 %644, 0
  %646 = extractvalue %dx.types.ResRet.f32 %644, 1
  %647 = extractvalue %dx.types.ResRet.f32 %644, 2
  %648 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %649 = extractvalue %dx.types.CBufRet.f32 %648, 3
  %650 = fmul fast float %497, 0x3FB45F3060000000
  %651 = fmul fast float %650, %511
  %652 = fmul fast float %651, %577
  %653 = fmul fast float %652, %590
  %654 = fmul fast float %653, %645
  %655 = fmul fast float %654, %649
  %656 = fmul fast float %650, %512
  %657 = fmul fast float %656, %578
  %658 = fmul fast float %657, %591
  %659 = fmul fast float %658, %646
  %660 = fmul fast float %659, %649
  %661 = fmul fast float %650, %513
  %662 = fmul fast float %661, %579
  %663 = fmul fast float %662, %592
  %664 = fmul fast float %663, %647
  %665 = fmul fast float %664, %649
  %666 = fadd fast float %655, %571
  %667 = fadd fast float %660, %572
  %668 = fadd fast float %665, %573
  br label %669

; <label>:669                                     ; preds = %598, %587, %581, %570
  %670 = phi float [ %666, %598 ], [ %571, %587 ], [ %571, %581 ], [ %571, %570 ]
  %671 = phi float [ %667, %598 ], [ %572, %587 ], [ %572, %581 ], [ %572, %570 ]
  %672 = phi float [ %668, %598 ], [ %573, %587 ], [ %573, %581 ], [ %573, %570 ]
  %673 = fmul fast float %497, 0xBFF7154760000000
  %674 = fmul fast float %673, %577
  %675 = fmul fast float %673, %578
  %676 = fmul fast float %673, %579
  %677 = call float @dx.op.unary.f32(i32 21, float %674)  ; Exp(value)
  %678 = call float @dx.op.unary.f32(i32 21, float %675)  ; Exp(value)
  %679 = call float @dx.op.unary.f32(i32 21, float %676)  ; Exp(value)
  %680 = fmul fast float %677, %511
  %681 = fmul fast float %678, %512
  %682 = fmul fast float %679, %513
  %683 = fcmp fast olt float %680, 0x3E7AD7F2A0000000
  %684 = fcmp fast olt float %681, 0x3E7AD7F2A0000000
  %685 = fcmp fast olt float %682, 0x3E7AD7F2A0000000
  %686 = and i1 %683, %684
  %687 = and i1 %686, %685
  br i1 %687, label %691, label %688

; <label>:688                                     ; preds = %669
  %689 = add nuw i32 %507, 1
  %690 = icmp ult i32 %689, %503
  br i1 %690, label %506, label %691

; <label>:691                                     ; preds = %688, %669
  %692 = phi float [ %680, %688 ], [ 0.000000e+00, %669 ]
  %693 = phi float [ %681, %688 ], [ 0.000000e+00, %669 ]
  %694 = phi float [ %682, %688 ], [ 0.000000e+00, %669 ]
  br label %695

; <label>:695                                     ; preds = %691, %431
  %696 = phi float [ %389, %431 ], [ %670, %691 ]
  %697 = phi float [ %390, %431 ], [ %671, %691 ]
  %698 = phi float [ %391, %431 ], [ %672, %691 ]
  %699 = phi float [ %392, %431 ], [ %692, %691 ]
  %700 = phi float [ %393, %431 ], [ %693, %691 ]
  %701 = phi float [ %394, %431 ], [ %694, %691 ]
  %702 = fadd fast float %396, 0x3F1A36E2E0000000
  %703 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %704 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %703, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %705 = extractvalue %dx.types.ResRet.i32 %704, 0
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %807, label %707

; <label>:707                                     ; preds = %695
  br label %708

; <label>:708                                     ; preds = %708, %707
  %709 = phi i32 [ %801, %708 ], [ 0, %707 ]
  %710 = phi float [ %800, %708 ], [ %274, %707 ]
  %711 = phi float [ %799, %708 ], [ %274, %707 ]
  %712 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 524, i32 8 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=8>
  %713 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %712, i32 %709, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %714 = extractvalue %dx.types.ResRet.i32 %713, 0
  %715 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %712, i32 %709, i32 4, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %716 = extractvalue %dx.types.ResRet.i32 %715, 0
  %717 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %718 = extractvalue %dx.types.CBufRet.i32 %717, 0
  %719 = extractvalue %dx.types.CBufRet.i32 %717, 1
  %720 = and i32 %716, 31
  %721 = lshr i32 %718, %720
  %722 = lshr i32 %719, %720
  %723 = mul i32 %721, %722
  %724 = urem i32 %714, %723
  %725 = urem i32 %724, %721
  %726 = udiv i32 %724, %721
  %727 = udiv i32 %714, %723
  %728 = extractvalue %dx.types.CBufRet.i32 %717, 2
  %729 = ashr i32 %718, %720
  %730 = sitofp i32 %729 to float
  %731 = ashr i32 %719, %720
  %732 = sitofp i32 %731 to float
  %733 = ashr i32 %728, %720
  %734 = sitofp i32 %733 to float
  %735 = uitofp i32 %725 to float
  %736 = uitofp i32 %726 to float
  %737 = uitofp i32 %727 to float
  %738 = fdiv fast float %735, %730
  %739 = fdiv fast float %736, %732
  %740 = fdiv fast float %737, %734
  %741 = add i32 %725, 1
  %742 = add i32 %726, 1
  %743 = add i32 %727, 1
  %744 = uitofp i32 %741 to float
  %745 = uitofp i32 %742 to float
  %746 = uitofp i32 %743 to float
  %747 = fdiv fast float %744, %730
  %748 = fdiv fast float %745, %732
  %749 = fdiv fast float %746, %734
  %750 = fadd fast float %239, %239
  %751 = fadd fast float %240, %240
  %752 = fadd fast float %241, %241
  %753 = fmul fast float %738, %750
  %754 = fmul fast float %739, %751
  %755 = fmul fast float %740, %752
  %756 = fmul fast float %747, %750
  %757 = fmul fast float %748, %751
  %758 = fmul fast float %749, %752
  %759 = fsub fast float 0xBF1A36E2E0000000, %204
  %760 = fadd fast float %759, %242
  %761 = fadd fast float %760, %753
  %762 = fsub fast float 0xBF1A36E2E0000000, %208
  %763 = fadd fast float %762, %243
  %764 = fadd fast float %763, %754
  %765 = fsub fast float 0xBF1A36E2E0000000, %212
  %766 = fadd fast float %765, %244
  %767 = fadd fast float %766, %755
  %768 = fmul fast float %248, %761
  %769 = fmul fast float %249, %764
  %770 = fmul fast float %250, %767
  %771 = fsub fast float 0x3F1A36E2E0000000, %204
  %772 = fadd fast float %771, %242
  %773 = fadd fast float %772, %756
  %774 = fsub fast float 0x3F1A36E2E0000000, %208
  %775 = fadd fast float %774, %243
  %776 = fadd fast float %775, %757
  %777 = fsub fast float 0x3F1A36E2E0000000, %212
  %778 = fadd fast float %777, %244
  %779 = fadd fast float %778, %758
  %780 = fmul fast float %773, %248
  %781 = fmul fast float %776, %249
  %782 = fmul fast float %779, %250
  %783 = call float @dx.op.binary.f32(i32 36, float %768, float %780)  ; FMin(a,b)
  %784 = call float @dx.op.binary.f32(i32 36, float %769, float %781)  ; FMin(a,b)
  %785 = call float @dx.op.binary.f32(i32 36, float %770, float %782)  ; FMin(a,b)
  %786 = call float @dx.op.binary.f32(i32 35, float %768, float %780)  ; FMax(a,b)
  %787 = call float @dx.op.binary.f32(i32 35, float %769, float %781)  ; FMax(a,b)
  %788 = call float @dx.op.binary.f32(i32 35, float %770, float %782)  ; FMax(a,b)
  %789 = call float @dx.op.binary.f32(i32 35, float %784, float %785)  ; FMax(a,b)
  %790 = call float @dx.op.binary.f32(i32 35, float %783, float %789)  ; FMax(a,b)
  %791 = call float @dx.op.binary.f32(i32 36, float %787, float %788)  ; FMin(a,b)
  %792 = call float @dx.op.binary.f32(i32 36, float %786, float %791)  ; FMin(a,b)
  %793 = call float @dx.op.binary.f32(i32 35, float %790, float %702)  ; FMax(a,b)
  %794 = call float @dx.op.binary.f32(i32 36, float %792, float %274)  ; FMin(a,b)
  %795 = fsub fast float %794, %793
  %796 = fcmp fast ogt float %795, 0.000000e+00
  %797 = fcmp fast olt float %793, %711
  %798 = and i1 %797, %796
  %799 = select i1 %798, float %793, float %711
  %800 = select i1 %798, float %794, float %710
  %801 = add i32 %709, 1
  %802 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %803 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %802, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %804 = extractvalue %dx.types.ResRet.i32 %803, 0
  %805 = icmp ult i32 %801, %804
  br i1 %805, label %708, label %806

; <label>:806                                     ; preds = %708
  br label %807

; <label>:807                                     ; preds = %806, %695
  %808 = phi float [ %274, %695 ], [ %800, %806 ]
  %809 = phi float [ %274, %695 ], [ %799, %806 ]
  %810 = fsub fast float %808, %809
  %811 = fcmp fast ogt float %810, 0.000000e+00
  br i1 %811, label %388, label %812

; <label>:812                                     ; preds = %807
  br label %813

; <label>:813                                     ; preds = %812, %382
  %814 = phi float [ 0.000000e+00, %382 ], [ %696, %812 ]
  %815 = phi float [ 0.000000e+00, %382 ], [ %697, %812 ]
  %816 = phi float [ 0.000000e+00, %382 ], [ %698, %812 ]
  %817 = phi float [ %36, %382 ], [ %699, %812 ]
  %818 = phi float [ %36, %382 ], [ %700, %812 ]
  %819 = phi float [ %36, %382 ], [ %701, %812 ]
  %820 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %821 = extractvalue %dx.types.CBufRet.i32 %820, 0
  %822 = icmp ne i32 %821, 0
  %823 = fsub fast float 1.000000e+00, %817
  %824 = fsub fast float 1.000000e+00, %818
  %825 = fsub fast float 1.000000e+00, %819
  %826 = select i1 %822, float %823, float 0.000000e+00
  %827 = select i1 %822, float %824, float 0.000000e+00
  %828 = select i1 %822, float %825, float 0.000000e+00
  %829 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %830 = extractvalue %dx.types.CBufRet.f32 %829, 2
  %831 = fmul fast float %830, %814
  %832 = fmul fast float %830, %815
  %833 = fmul fast float %830, %816
  %834 = fptoui float %47 to i32
  %835 = fptoui float %48 to i32
  %836 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 4098, i32 1033 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<4xF32>
  %837 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %836, i32 undef, i32 %834, i32 %835, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %838 = extractvalue %dx.types.ResRet.f32 %837, 0
  %839 = extractvalue %dx.types.ResRet.f32 %837, 1
  %840 = extractvalue %dx.types.ResRet.f32 %837, 2
  %841 = fadd fast float %838, %831
  %842 = fadd fast float %839, %832
  %843 = fadd fast float %840, %833
  %844 = extractvalue %dx.types.ResRet.f32 %837, 3
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %836, i32 %834, i32 %835, i32 undef, float %841, float %842, float %843, float %844, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %845 = call float @dx.op.dot3.f32(i32 55, float %826, float %827, float %828, float 0x3FD3333340000000, float 0x3FE2E147A0000000, float 0x3FBC28F5C0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %846 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 4098, i32 1033 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<4xF32>
  %847 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %846, i32 undef, i32 %834, i32 %835, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %848 = extractvalue %dx.types.ResRet.f32 %847, 0
  %849 = extractvalue %dx.types.ResRet.f32 %847, 1
  %850 = extractvalue %dx.types.ResRet.f32 %847, 2
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %846, i32 %834, i32 %835, i32 undef, float %848, float %849, float %850, float %845, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %851 = or i32 %20, %19
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %853, label %877

; <label>:853                                     ; preds = %813
  %854 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %855 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %854, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %856 = extractvalue %dx.types.ResRet.i32 %855, 0
  %857 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4620, i32 8 })  ; AnnotateHandle(res,props)  resource: RWStructuredBuffer<stride=8>
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %857, i32 0, i32 4, i32 %856, i32 undef, i32 undef, i32 undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %858 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %859 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %858, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %860 = extractvalue %dx.types.ResRet.i32 %859, 0
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %877, label %862

; <label>:862                                     ; preds = %853
  br label %863

; <label>:863                                     ; preds = %863, %862
  %864 = phi i32 [ %865, %863 ], [ 0, %862 ]
  %865 = add i32 %864, 1
  %866 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4620, i32 8 })  ; AnnotateHandle(res,props)  resource: RWStructuredBuffer<stride=8>
  %867 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 524, i32 8 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=8>
  %868 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %867, i32 %864, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %869 = extractvalue %dx.types.ResRet.i32 %868, 0
  %870 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %867, i32 %864, i32 4, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %871 = extractvalue %dx.types.ResRet.i32 %870, 0
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %866, i32 %865, i32 0, i32 %869, i32 undef, i32 undef, i32 undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %866, i32 %865, i32 4, i32 %871, i32 undef, i32 undef, i32 undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %872 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %873 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %872, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %874 = extractvalue %dx.types.ResRet.i32 %873, 0
  %875 = icmp ult i32 %865, %874
  br i1 %875, label %863, label %876

; <label>:876                                     ; preds = %863
  br label %877

; <label>:877                                     ; preds = %876, %853, %813, %100, %0
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind
declare void @dx.op.rawBufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!28}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"cs", i32 6, i32 6}
!4 = !{!5, !18, !21, !25}
!5 = !{!6, !8, !9, !10, !12, !14, !15, !16}
!6 = !{i32 0, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 4, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 4, i32 0, !7}
!9 = !{i32 2, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 4, i32 0, !7}
!10 = !{i32 3, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !11}
!11 = !{i32 0, i32 5}
!12 = !{i32 4, %"class.StructuredBuffer<FVoxelDataPacked>"* undef, !"", i32 0, i32 4, i32 1, i32 12, i32 0, !13}
!13 = !{i32 1, i32 8}
!14 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 2, i32 0, !7}
!15 = !{i32 6, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 6, i32 1, i32 4, i32 0, !7}
!16 = !{i32 7, %"class.StructuredBuffer<FRayMarchingTile>"* undef, !"", i32 0, i32 7, i32 1, i32 12, i32 0, !17}
!17 = !{i32 1, i32 32}
!18 = !{!19, !20}
!19 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!20 = !{i32 1, %"class.RWStructuredBuffer<FVoxelDataPacked>"* undef, !"", i32 0, i32 1, i32 1, i32 12, i1 false, i1 false, i1 false, !13}
!21 = !{!22, !23, !24}
!22 = !{i32 0, %hostlayout._RootShaderParameters* undef, !"", i32 0, i32 0, i32 1, i32 992, null}
!23 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5484, null}
!24 = !{i32 2, %hostlayout.UniformBufferConstants_SparseVoxelUniformBuffer* undef, !"", i32 0, i32 2, i32 1, i32 268, null}
!25 = !{!26, !27}
!26 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!27 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!28 = !{void ()* @RenderSingleScatteringWithPreshadingCS, !"RenderSingleScatteringWithPreshadingCS", null, !4, !29}
!29 = !{i32 0, i64 8208, i32 4, !30, i32 5, !31}
!30 = !{i32 64, i32 1, i32 1}
!31 = !{i32 0}
!32 = distinct !{!32, !"dx.controlflow.hints", i32 2}
